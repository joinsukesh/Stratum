@using Stratum.Feature.PageContent.Models
@using Sitecore.Mvc
@using Stratum.Foundation.Common.Models
@using Stratum.Foundation.Common.Services
@using Stratum.Foundation.Common.Utilities
@model TestimonialsSection
@{
    Layout = null;
    BaseRenderingParams brParams = new CommonService().GetBaseRenderingParams();
    bool isExperienceEditor = SitecoreUtility.IsExperienceEditorMode();
}

@if (Model != null)
{
    <section id="@brParams.SectionId" class="testimonials @(brParams.AddDefaultBackgroundColor ? "section-bg" : "")" style="@(brParams.AddDefaultBackgroundColor ? "" : string.Format("background-color:{0}", brParams.BackgroundColor))">
        <div class="container">
            @if ((!string.IsNullOrWhiteSpace(Model.Title)) ||
                (!string.IsNullOrWhiteSpace(Model.Description)) || isExperienceEditor)
            {
                <div class="section-title" data-aos="fade-up">
                    @if ((!string.IsNullOrWhiteSpace(Model.Title)) || isExperienceEditor)
                    {
                        @Html.Sitecore().Field(Model.TitleId, Model.InnerItem)
                    }
                    @if ((!string.IsNullOrWhiteSpace(Model.Description)) || isExperienceEditor)
                    {
                        @Html.Sitecore().Field(Model.DescriptionId, Model.InnerItem)
                    }
                </div>
            }

            @if ((Model.Testimonials != null && Model.Testimonials.Count > 0) || isExperienceEditor)
            {
                if ((Model.Testimonials == null && Model.Testimonials.Count == 0) && isExperienceEditor)
                {
                    <div>
                        <h3>Add testimonial child items</h3>
                    </div>
                }
                else if (Model.Testimonials != null && Model.Testimonials.Count > 0)
                {
                    <div class="testimonials-slider swiper" data-aos="fade-up" data-aos-delay="100">
                        <div class="swiper-wrapper">

                            @foreach (Testimonial testimonial in Model.Testimonials)
                            {
                                <div class="swiper-slide">
                                    <div class="testimonial-item">
                                        <p>
                                            <i class="bx bxs-quote-alt-left quote-icon-left"></i>
                                            @Html.Sitecore().Field(testimonial.CommentsId, testimonial.InnerItem)
                                            <i class="bx bxs-quote-alt-right quote-icon-right"></i>
                                        </p>
                                        @if ((!string.IsNullOrWhiteSpace(testimonial.ImageUrl)) || isExperienceEditor)
                                        {
                                            @Html.Sitecore().Field(testimonial.ImageId, testimonial.InnerItem, new { @class = "testimonial-img" })
                                        }
                                        @if ((!string.IsNullOrWhiteSpace(testimonial.PersonName)) || isExperienceEditor)
                                        {
                                            <h3>@Html.Sitecore().Field(testimonial.PersonNameId, testimonial.InnerItem)</h3>
                                        }
                                        @if ((!string.IsNullOrWhiteSpace(testimonial.Designation)) || isExperienceEditor)
                                        {
                                            <h4>@Html.Sitecore().Field(testimonial.DesignationId, testimonial.InnerItem)</h4>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="swiper-pagination"></div>
                    </div>
                }
            }

        </div>
    </section>
}
else
{
    <span></span>
}
