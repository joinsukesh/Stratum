@using Stratum.Feature.Accounts
@using Stratum.Feature.Accounts.Models
@using Sitecore.Mvc
@using Stratum.Foundation.Common
@using Stratum.Foundation.Common.Utilities

@using System.Web.Mvc
@model ResetPassword
@{
    Layout = null;
    bool isExperienceEditor = SitecoreUtility.IsExperienceEditorMode();
}

@if (Model != null)
{
    <section id="@Model.SectionId" class="@Model.SectionCssClass">
        <div class="container">
            @if ((!MvcHtmlString.IsNullOrEmpty(Model.Title)) || (!MvcHtmlString.IsNullOrEmpty(Model.Description)) || isExperienceEditor)
            {
                <div class="section-title" data-aos="fade-up">
                    @if ((!MvcHtmlString.IsNullOrEmpty(Model.Title)) || isExperienceEditor)
                    {
                        @Model.Title
                    }
                    @if ((!MvcHtmlString.IsNullOrEmpty(Model.Description)) || isExperienceEditor)
                    {
                        @Model.Description
                    }
                </div>
            }
            <div class="row justify-content-center" data-aos="fade-up" style="margin-top:-45px;">
                <div class="col-lg-10">
                    @using (Ajax.BeginForm("ResetPassword", "Accounts",
                    new AjaxOptions
                    {
                        HttpMethod = "Post",
                        OnBegin = "OnBegin_RP",
                        OnSuccess = "OnSuccess_RP",
                        OnFailure = "OnFailure_RP"
                    }, new { @class = "php-email-form", id = "formResetPassword" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.HiddenFor(x => x.Email, new { id = "Email" })
                        <div class="form-group mt-3">
                            @Html.TextBoxFor(x => x.Password, new { @class = "form-control", type = "password", autocomplete = "off", id = "NewPassword", placeholder = DictionaryValues.Labels.NewPassword })
                            @Html.ValidationMessageFor(x => x.Password, null, "span")
                        </div>
                        <div class="form-group mt-3">
                            @Html.TextBoxFor(x => x.ConfirmPassword, new { @class = "form-control", type = "password", autocomplete = "off", id = "ConfirmPassword", placeholder = DictionaryValues.Labels.ConfirmPassword })
                            @Html.ValidationMessageFor(x => x.ConfirmPassword, null, "span")
                        </div>
                        <div class="text-center"><button id="btnRpSubmit" type="submit">@CommonDictionaryValues.Labels.Submit</button></div>
                        <div class="form-group mt-3">
                            <div id="divRpSubmitSuccess" style="display:none;color:forestgreen;">
                                @Model.SuccessMessage
                            </div>
                            <div id="divRpSubmitFail">

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
}
else
{
    <span></span>
}
